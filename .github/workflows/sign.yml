name: Sign Docker Images

on:
  workflow_run:
    workflows: ["Build and Push Multi-arch Docker Images"]
    types:
      - completed

jobs:
  sign:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Extract version from config.yaml
        id: version
        run: |
          VERSION=$(grep -m 1 "version:" dozzle/config.yaml | awk '{print $2}' | tr -d "'")
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "Extracted version: $VERSION"

      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.3.0

      - name: Generate key pair
        id: keys
        run: |
          cosign generate-key-pair
          echo "key_generated=true" >> $GITHUB_ENV

      - name: Get image digest
        run: |
          for arch in amd64 aarch64 armv7; do
            DIGEST=$(skopeo inspect docker://ghcr.io/erreur32/homeassistant-dozzle-addon/dozzle-$arch:${{ env.VERSION }} --format '{{.Digest}}')
            if [ -z "$DIGEST" ]; then
              echo "Error: No image found for architecture $arch."
              exit 1
            fi
            arch_upper=$(echo $arch | tr '[:lower:]' '[:upper:]')
            echo "DOZZLE_${arch_upper}_DIGEST=$DIGEST" >> $GITHUB_ENV
          done

      - name: Sign images
        if: env.key_generated == 'true'
        run: |
          for arch in amd64 aarch64 armv7; do
            arch_upper=$(echo $arch | tr '[:lower:]' '[:upper:]')
            digest_var="DOZZLE_${arch_upper}_DIGEST"
            cosign sign --key cosign.key \
              ghcr.io/erreur32/homeassistant-dozzle-addon/dozzle-$arch@${!digest_var}
          done

      - name: Upload public key
        if: env.key_generated == 'true'
        uses: actions/upload-artifact@v4
        with:
          name: cosign-public-key
          path: cosign.pub
          retention-days: 5