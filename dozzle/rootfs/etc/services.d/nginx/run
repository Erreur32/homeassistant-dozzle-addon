#!/bin/bash
# ==============================================================================
# Start nginx service for ingress support
# ==============================================================================

echo "$(date '+%Y-%m-%d %H:%M:%S') Starting Nginx for ingress support..."

# Create required directories
mkdir -p /var/log/nginx
mkdir -p /var/lib/nginx/body
mkdir -p /etc/nginx/includes

# Remove any default nginx configuration that might be causing conflicts
rm -f /etc/nginx/conf.d/default.conf
rm -f /etc/nginx/sites-enabled/default
rm -f /etc/nginx/sites-available/default
rm -f /etc/nginx/http.d/default.conf
rm -f /etc/nginx/servers/ingress.conf

# S'assurer qu'aucune instance de nginx n'est en cours d'exécution
if pgrep -x "nginx" > /dev/null; then
    echo "$(date '+%Y-%m-%d %H:%M:%S') Nginx is already running, stopping it..."
    nginx -s stop || killall -9 nginx
    sleep 2
fi

# Check if port 8099 is already in use
if netstat -tuln 2>/dev/null | grep -q ":8099 "; then
    echo "$(date '+%Y-%m-%d %H:%M:%S') WARNING: Port 8099 is already in use by another process"
    # Try to identify which process is using the port
    if command -v lsof >/dev/null 2>&1; then
        echo "$(date '+%Y-%m-%d %H:%M:%S') Process using port 8099:"
        lsof -i :8099
    elif command -v fuser >/dev/null 2>&1; then
        echo "$(date '+%Y-%m-%d %H:%M:%S') Process using port 8099:"
        fuser 8099/tcp
    else
        echo "$(date '+%Y-%m-%d %H:%M:%S') Cannot determine which process is using port 8099"
    fi
    
    # Try to kill the process using port 8099
    echo "$(date '+%Y-%m-%d %H:%M:%S') Attempting to free port 8099..."
    if command -v fuser >/dev/null 2>&1; then
        fuser -k 8099/tcp || true
    fi
    
    # Wait a moment for the port to be released
    sleep 2
    
    # Vérifier à nouveau si le port est libre
    if netstat -tuln 2>/dev/null | grep -q ":8099 "; then
        echo "$(date '+%Y-%m-%d %H:%M:%S') ERROR: Port 8099 is still in use, cannot start nginx"
        exit 1
    fi
fi

# Create a minimal nginx configuration that only listens on port 8099
echo "$(date '+%Y-%m-%d %H:%M:%S') Creating nginx configuration..."
cat > /etc/nginx/nginx.conf << 'EOF'
worker_processes 1;
pid /var/run/nginx.pid;
error_log /dev/stdout info;
daemon off;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 65;
    proxy_read_timeout 1200;
    gzip on;
    gzip_disable "msie6";
    
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }
    
    # Include upstream configuration
    include /etc/nginx/includes/upstream.conf;
    
    # Ingress configuration - ONLY listen on port 8099
    server {
        listen 8099 default_server;
        
        server_name _;
        access_log /dev/stdout combined;
        
        client_max_body_size 64M;
        keepalive_timeout 65;
        
        location / {
            proxy_pass http://dozzle;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            
            proxy_redirect off;
            proxy_buffering off;
        }
    }
}
EOF

# Create upstream.conf for Dozzle
echo "$(date '+%Y-%m-%d %H:%M:%S') Creating nginx upstream configuration for Dozzle"
cat > /etc/nginx/includes/upstream.conf << EOF
upstream dozzle {
    server 127.0.0.1:8080;
}
EOF

# Verify nginx configuration
echo "$(date '+%Y-%m-%d %H:%M:%S') Verifying nginx configuration..."
if nginx -t; then
    echo "$(date '+%Y-%m-%d %H:%M:%S') Nginx configuration is valid"
else
    echo "$(date '+%Y-%m-%d %H:%M:%S') ERROR: Nginx configuration is invalid"
    exit 1
fi

# Vérifier si d'autres processus écoutent sur le port 8099 une dernière fois
if netstat -tuln 2>/dev/null | grep -q ":8099 "; then
    echo "$(date '+%Y-%m-%d %H:%M:%S') WARNING: Port 8099 is still in use, attempting to force free it..."
    if command -v fuser >/dev/null 2>&1; then
        fuser -k 8099/tcp || true
    fi
    sleep 2
fi

echo "$(date '+%Y-%m-%d %H:%M:%S') Nginx configuration ready, starting nginx..."

# Start nginx with explicit configuration file and make sure it stays in foreground
exec nginx -c /etc/nginx/nginx.conf 