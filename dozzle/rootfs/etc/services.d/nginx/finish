#!/bin/sh
# ==============================================================================
# Home Assistant Add-on: Dozzle
# Take down the S6 supervision tree when Nginx fails
# ==============================================================================

# Define colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[0;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# Default log level (can be overridden by environment variable)
LOG_LEVEL="${LOG_LEVEL:-info}"

# Define log level values
LOG_LEVEL_DEBUG=3
LOG_LEVEL_INFO=2
LOG_LEVEL_WARNING=1
LOG_LEVEL_ERROR=0

# Set current log level based on configuration
CURRENT_LOG_LEVEL=$LOG_LEVEL_INFO
case "${LOG_LEVEL}" in
    "debug")
        CURRENT_LOG_LEVEL=$LOG_LEVEL_DEBUG
        ;;
    "info")
        CURRENT_LOG_LEVEL=$LOG_LEVEL_INFO
        ;;
    "error")
        CURRENT_LOG_LEVEL=$LOG_LEVEL_ERROR
        ;;
esac

# Use colored echo for logging with timestamp and level filtering
log_debug() { 
    if [ $CURRENT_LOG_LEVEL -ge $LOG_LEVEL_DEBUG ]; then
        timestamp=$(date +"%Y-%m-%d %H:%M:%S")
        echo -e "${BLUE}[DEBUG]${NC} ${BLUE}${timestamp}${NC} $1"
    fi
}

log_info() { 
    if [ $CURRENT_LOG_LEVEL -ge $LOG_LEVEL_INFO ]; then
        timestamp=$(date +"%Y-%m-%d %H:%M:%S")
        echo -e "${GREEN}[INFO]${NC} ${BLUE}${timestamp}${NC} $1"
    fi
}

log_warning() { 
    if [ $CURRENT_LOG_LEVEL -ge $LOG_LEVEL_WARNING ]; then
        timestamp=$(date +"%Y-%m-%d %H:%M:%S")
        echo -e "${YELLOW}[WARNING]${NC} ${BLUE}${timestamp}${NC} $1"
    fi
}

log_error() { 
    if [ $CURRENT_LOG_LEVEL -ge $LOG_LEVEL_ERROR ]; then
        timestamp=$(date +"%Y-%m-%d %H:%M:%S")
        echo -e "${RED}[ERROR]${NC} ${BLUE}${timestamp}${NC} $1"
    fi
}

declare exit_code
readonly exit_code_container=$(</run/s6-linux-init-container-results/exitcode)
readonly exit_code_service="${1}"
readonly exit_code_signal="${2}"

log_info "Service nginx exited with code ${exit_code_service} (by signal ${exit_code_signal})"

if [ "${exit_code_service}" -eq 0 ] || [ "${exit_code_container}" -gt 0 ]; then
  log_info "Service restart not needed"
  exit "${exit_code_container}"
fi

log_info "Restarting service..."
exec /usr/bin/s6-svc -r /var/run/s6/services/nginx 